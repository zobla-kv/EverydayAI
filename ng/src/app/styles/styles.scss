/* global styles */
@import '../../../../node_modules/bootstrap/scss/bootstrap';
@import './variables';

// TODO: check responsiveness of <h> tags
// not good for now

body {
  background-color: $main-dark-bg-color;
  color: $white-text;
  box-sizing: border-box;
  // TODO: this is only for preloader to have it so it wouldn't appear after (causes page flick)
  overflow-y: scroll;

  .header-wrapper, .page-wrapper, .footer-wrapper {
    max-width: 1600px;
    margin: 0 auto;
  }
}

.page-wrapper {
  min-height: 100vh;
  margin-top: $header-height;
  position: relative;
}

img {
  width: 100%;
  height: 100%;
}

/* fonts */
@font-face {
  font-family: 'DM Serif Display';
  src: url('../../assets/fonts/DMSerifDisplay-Regular.ttf') format('truetype');
}

h1, h2, h3, h4, h5 { font-family: 'DM Serif Display'; }

// TODO: check zoom out
.viewport-height { min-height: $viewport-height-without-header; }
.vr { opacity: 0.75; }

/* general */
.w-10 { width: 10% !important; }
.w-20 { width: 20% !important; }
.w-30 { width: 30% !important; }
.w-40 { width: 40% !important; }
.w-50 { width: 50% !important; }
.w-60 { width: 60% !important; }
.w-70 { width: 70% !important; }
.w-80 { width: 80% !important; }
.w-90 { width: 90% !important; }
.w-100 { width: 100% !important; }

.h-10 { height: 10% !important; }
.h-20 { height: 20% !important; }
.h-30 { height: 30% !important; }
.h-40 { height: 40% !important; }
.h-50 { height: 50% !important; }
.h-60 { height: 60% !important; }
.h-70 { height: 70% !important; }
.h-80 { height: 80% !important; }
.h-90 { height: 90% !important; }
.h-100 { height: 100% !important; }

.opaque { opacity: 0; }
.rotate-180 { transform: rotate(180deg); }

/* alignment */
.absolute-center {
  position: absolute;
  margin: auto;
  left: 0;
  right: 0;
}
.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
.flex-filler { flex: 1 1 auto; }
// TODO: maybe this is not only for <hr>
// it might work for everything
// removes other margins!!
.hr-center { margin: 0 auto; }
.hr-right { margin: 0 0 0 auto; }
.hr-left { margin: 0 auto 0 0; }

/* backgrounds */
.main-orange-bg { background-color: $main-orange-bg-color; }
.light-orange-bg { background-color: $light-orange-bg-color; }
.main-dark-bg { background-color: $main-dark-bg-color; }
.gradient-bg { background: linear-gradient(90deg, rgba(249,226,226,0.5665616588432247) 0%, $main-orange-bg-color 100%); }
.hr-color-orange { border: 1px solid $main-orange-bg-color; }

/* text */
.dark-text { color: $dark-text !important; }
.orange-text { color: $orange-text !important; }
.gray-text { color: $gray-text !important; }

/* header footer */
header,
.footer-wrapper {
  background-color: $main-dark-bg-color;
  width: 100%;
  z-index: 99999;
  position: sticky;
}

.custom-border {
  &::before {
    position: absolute;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: inset 0 0 0 2px white;
    border-radius: 8px;
    mix-blend-mode: difference;
    content: '';
  }
}

/* buttons */
.btn {
  background-color: $main-orange-bg-color;
  border-radius: 20px;
  align-items: center;
  font-weight: bold;
  transition: all .3s ease;
}
.btn:hover {
  background-color: $main-dark-bg-color;
  color: #fff;
}

.btn-reverse {
  @extend .btn;
  background-color: $main-dark-bg-color;
  color: white;
}
.btn-reverse:hover {
  background-color: $main-orange-bg-color;
  color: black;
}

// reset bootstrap
.btn:active {
  background-color: $main-orange-bg-color !important;
  color: $dark-text !important;
}
.btn-reverse:active {
  background-color: $main-dark-bg-color !important;
  color: $white-text !important;
}

/* images */
.main-logo { background-image: $main-logo; }

/* material */
.mat-icon { color: $orange-text; }
.mat-icon svg path { fill: $orange-text; }

*:has(> mat-spinner) { user-select: none !important; cursor: default !important; }
.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic {
  stroke: $main-orange-bg-color !important;
}
// TODO: find other places and remove them and add 'reverse' class to mat spinners
.mat-mdc-progress-spinner.reverse .mdc-circular-progress__indeterminate-circle-graphic {
  stroke: $main-dark-bg-color !important;
}

.mat-mdc-paginator {
  border-radius: 8px;
  background-color: $main-orange-bg-color;
}

.mdc-tooltip {
  top: -8px;
  .mdc-tooltip__surface {
    color: $orange-text !important;
    border: 1px solid $main-orange-bg-color !important;
    background-color: $main-dark-bg-color !important;
  }
}

.cdk-overlay-pane { height: 0; }
.mdc-snackbar {
  margin-top: 130px !important;
  min-height: 70px;

  .mdc-snackbar__surface {
    padding-right: 0 !important;
    max-width: 230px !important;
    min-width: 150px !important;
    text-align: center;

    .mat-mdc-snack-bar-label {
      color: white !important;
      border-radius: 4px !important;
      padding-left: 0;

      .mat-icon {
        position: relative;
        left: 6px;
      }
    }
  }

  &.snackbar-success .mdc-snackbar__surface {
    background-color: green !important;
    .mat-icon { color: $toast-green-bg-color; transform: scale(1.1); }
  }
  &.snackbar-error .mdc-snackbar__surface {
    background-color: $toast-red-bg-color !important;
    .mat-icon { color: red; transform: scale(1.2); }
  }
}

.mat-badge-content {
  // disable animation
  transition: none !important;
  background-color: $main-orange-bg-color;
  border: 1px solid $main-dark-bg-color;
  color: $main-dark-bg-color;
}

/* forms */
// failed validation
input.ng-invalid.ng-touched,
.form-group.gender:has(input.ng-invalid.ng-touched),
.form-group.gender .form-style:has(input.ng-invalid.ng-touched) {

  box-shadow: $error-inset;
  -webkit-box-shadow: $error-inset;
  -moz-box-shadow: $error-inset;

  .mat-icon { color: $error-color; }
  .mat-icon svg path { fill: $error-color; }
  & ~ .mat-icon { color: $error-color; }
  & ~ .mat-icon svg path { fill: $error-color; }
}

/* MEDIA QUERIES */
// bigger than 976px
@media only screen and (min-width: 976px) {
  .page-wrapper { padding: 2rem; }
}
// smaller than 976px
@media only screen and (max-width: 976px) {
  p { font-size: 20px !important; }
}
// smaller than 576px
@media only screen and (max-width: 576px) {
  p { font-size: 16px !important; }
}
